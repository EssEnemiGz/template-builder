# ===========================================
# Dockerfile for Flask Backend Application
# ===========================================
# This Dockerfile sets up a Python environment for running a Flask application
# with PostgreSQL database connectivity.

# Base Image
# Using slim version to minimize image size while maintaining functionality
FROM python:3.12-slim 

# Set working directory for the application
# All subsequent commands will be run from this directory
WORKDIR /app

# Install Dependencies
# Copy only requirements.txt first to leverage Docker cache
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt \
    && rm -rf /root/.cache/pip/*  # Clean up pip cache to reduce image size

# Copy Application Code
# Copy the rest of the application code into the container
# This is done after installing dependencies to leverage Docker cache
COPY . .

# Configure Container
# Expose port 5000 for the Flask application
EXPOSE 5000
ENV PYTHONUNBUFFERED=1

# Launch Application
# Run Flask development server
# --host=0.0.0.0 allows external connections to the container
CMD ["flask", "run", "--host=0.0.0.0"]

# Note: This container should be used with the docker-compose.yml file
# which sets up the PostgreSQL database and other required services